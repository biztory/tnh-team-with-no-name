"""
Django settings for tableau_next_question project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path
from dotenv import load_dotenv

from django.core.management.utils import get_random_secret_key

load_dotenv(verbose=True)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY", get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = str(os.getenv("DEBUG", "True")).lower() == "true"
DEVELOPMENT_MODE = str(os.getenv("DEVELOPMENT_MODE", "True")).lower() == "true"

ALLOWED_HOSTS = os.getenv("DJANGO_ALLOWED_HOSTS", "127.0.0.1,localhost").split(",")
CSRF_TRUSTED_ORIGINS = os.getenv("DJANGO_CSRF_TRUSTED_ORIGINS", "https://*.127.0.0.1").split(",")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "encrypted_model_fields",
    "django_q",
    "core.apps.CoreConfig",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = 'tableau_next_question.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'tableau_next_question.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = os.getenv("TIME_ZONE", default="UTC")

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "static/"
STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# For django-encrypted-model-fields
FIELD_ENCRYPTION_KEY = os.getenv("FIELD_ENCRYPTION_KEY", get_random_secret_key())

# Logging

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "django",
        },
    },
    "root": {
        "handlers": ["console"],
        "level": "INFO",
    },
    "formatters": {
        "django": {
            "()": "django.utils.log.ServerFormatter",
            "format": "[{server_time}] {levelname}: {message}",
            "style": "{",
        }
    },
}

# For Django-Q2 https://github.com/django-q2/django-q2
Q_CLUSTER = {
    "name": "DjangORM",
    "workers": 4,
    "timeout": 28800,
    "retry": 28860,
    "queue_limit": 50,
    "bulk": 10,
    "orm": "default",
    "catch_up": (
        False if DEVELOPMENT_MODE else True
    ),  # Do not "catch up" when local, it's annoying (https://django-q2.readthedocs.io/en/master/configure.html#catch-up)
}

# Slack
SLACK_CLIENT_ID = os.getenv("SLACK_CLIENT_ID", "")
SLACK_CLIENT_SECRET = os.getenv("SLACK_CLIENT_SECRET", "")
SLACK_EVENTS_API_VERIFICATION_TOKEN = os.getenv("SLACK_EVENTS_API_VERIFICATION_TOKEN", "")

# Tableau Next API
SF_EXT_CLIENT_APP_CONSUMER_KEY = os.getenv("SF_EXT_CLIENT_APP_CONSUMER_KEY", "")
SF_EXT_CLIENT_APP_CONSUMER_SECRET = os.getenv("SF_EXT_CLIENT_APP_CONSUMER_SECRET", "")
SF_EXT_CLIENT_APP_REDIRECT_URI = os.getenv("SF_EXT_CLIENT_APP_REDIRECT_URI", "")
SF_ORG_DOMAIN = os.getenv("SF_ORG_DOMAIN", "")

# Tableau REST API
TABLEAU_SERVER_URL = os.getenv("TABLEAU_SERVER_URL", "")
TABLEAU_API_VERSION = os.getenv("TABLEAU_API_VERSION", "")
TABLEAU_SITE_CONTENT_URL = os.getenv("TABLEAU_SITE_CONTENT_URL", "")
TABLEAU_PAT_NAME = os.getenv("TABLEAU_PAT_NAME", "")
TABLEAU_PAT_SECRET = os.getenv("TABLEAU_PAT_SECRET", "")

# App-specific
TNQ_TEMP_WORKSPACE_NAME = os.getenv("TNQ_TEMP_WORKSPACE_NAME", "Timothy_s_Workspace")
TNQ_TEMP_WORKSPACE_LABEL = os.getenv("TNQ_TEMP_WORKSPACE_LABEL", "(Tableau) Next Question! - Temporary Workspace")